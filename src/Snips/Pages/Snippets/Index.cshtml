@page
@model Snips.Pages.Snippets.Index

@{
    ViewData["Title"] = "Snippets";
}

<div class="columns">
    <div id="tree" class="column is-one-quarter">
        <aside class="menu">
            <partial name="Shared/_Treeview" model="Model.Tree"/>
        </aside>
    </div>
    <div id="viewer" class="column">
        <div id="title-row" class="columns">
            <div class="column is-vcentered content">
                <h1 id="title"></h1>
            </div>
            <div class="column is-narrow is-vcentered">
                <a id="edit-button" class="button is-primary">Edit</a>
            </div>
        </div>
        <div id="content" class="content"></div>
        <div id="placeholder" class="columns">
            <div class="column is-vcentered is-full mt-6">
                <div class="content">
                    <i>Select a snippet in the treeview.</i>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-treeview/1.2.0/bootstrap-treeview.min.js"></script>

    <script>
        function setViewerContent(id, title, content){
            $('#title-row').css("display", "");
            $('#content').css("display", "");
            $('#placeholder').css("display", "none");
            
            $('#edit-button').attr("href", "/snippets/edit/" + id);
            $('#title').html(title);
            $('#content').html(marked(content));
        }
        
        function resetViewer(){
            $('#title-row').css("display", "none");
            $('#content').css("display", "none");
            $('#placeholder').css("display", "");
            
            $('#edit-button').attr("href", null);
            $('#title').html(null);
            $('#content').html(null);
        }
        
        function getSnippetContent(snippetId){
            $.ajax({
                type: "GET",
                url: "/api/snippets/" + snippetId,
                contentType: "application/json",
                dataType: "json",
                success: function (response) {
                    setViewerContent(response.id, response.title, response.content);
                },
                failure: function (response) {
                    alert(response);
                }
            });
        }

        //menu-leaf : when clicking a menu-leaf, content should be displayed to the right, leaf should be put active
        let allLeaves = $('.menu-leaf');
        const isActive = "is-active";
        allLeaves.click(function() { 
            if ($(this).hasClass(isActive)){
                //if current leaf is active, deactivate all leaves and reset viewer
                allLeaves.removeClass(isActive);
                resetViewer();
            }     
            else {
                //if inactive, deactivate all leaves, activate current leaf and set viewer content
                allLeaves.removeClass(isActive);
                $(this).addClass(isActive);
                let snippetId = $(this).attr("data-id");
                getSnippetContent(snippetId);
            }
        });
        
        //menu-node : when clicking a menu-node, the <ul> that is right next to it should be hidden or displayed
        function expandNode(node){
            let folderIcon = $(node).children('span.icon');
            folderIcon.removeClass("fa-folder")
            folderIcon.addClass("fa-folder-open");
            $(node).siblings('ul').show();
            $(node).removeClass('collapsed');
            $(node).addClass('expanded');
        }
        
        function collapseNode(node){
            let folderIcon = node.children('span.icon');
            folderIcon.removeClass("fa-folder-open")
            folderIcon.addClass("fa-folder");
            $(node).siblings('ul').hide();
            $(node).removeClass('expanded');
            $(node).addClass('collapsed');
        }
        
        let allNodes = $('.menu-node');
        allNodes.click(function () {
            if ($(this).hasClass('collapsed')) {
                expandNode($(this));
            }
            else if ($(this).hasClass('expanded')) {
                collapseNode($(this));    
            }
            
            });
    
        allNodes.each(function (index, value){ expandNode(value);});      
        resetViewer();
    </script>
}